h1. Searchable Reference

h2. Summary

Used to map [searchable references|Searchable Plugin - Mapping - Compass concepts#Searchable Reference].

h2. Syntax

{code}
static searchable = {
    propertyName options
}
{code}

{code}
static searchable = {
    propertyName reference: true
}
{code}

{code}
static searchable = {
    propertyName reference: options
}
{code}

h2. Description

Maps the class's @propertyName@ property with the given [options|#Options].

You can use all three syntaxes when a [conventional mapping|Searchable Plugin - Mapping - Conventions] would give you a [searchable reference|Searchable Plugin - Mapping - Compass concepts#Searchable Reference].

When you want to change a [conventional searchable component mapping|Searchable Plugin - Mapping - Conventions] (which can happen when the associated class is embedded), you can use either of the last two syntaxes to make it a [searchable reference|Searchable Plugin - Mapping - Compass concepts#Searchable Reference] instead.

h2. Parameters

* *@options@* - a @Map@ of [options|#Options]

h3. Options

* *@accessor@* - How the property is accessed. One of @"field"@ or @"property"@. Default is @"property"@
* *@cascade@* - The operations to cascade to the target association. A @String@ comma-delimited-list of values in @"all"@, @"create"@, @"save"@ and @"delete"@.
* *@converter@* - The name of a configured converter to use to convert the property value to/from text
* *@lazy@* - If @true@ the association is lazy when recreating the owing instance for search results. Only applicable to Collections or arrays. Default is @false@

h2. Examples

{code}
// Provide a custom converter
metadata converter: "metadata\_converter"
{code}

{code}
// Map metadata as a reference, overriding any conventional mapping
metadata reference: true
{code}

{code}
// Map metadata as a reference, overriding any conventional mapping
// and define some options
metadata reference: [converter: "metadata\_converter"]
{code}